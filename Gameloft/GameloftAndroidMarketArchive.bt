//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../LHR/Common.bt"
local uint AMZVersion <hidden=true> = 0;

struct GameloftAndroidMarketArchive
{
    BigEndian();
    uint32 infoSz;
    struct Entries
    {
        while (FPos < infoSz)
        {
            struct Entry
            {
                if (ReadInt() == 816741)
                {
                    I16_StringEntry ver;
                    if (ver.theString == "version: 103")
                    {
                        AMZVersion = 3;
                    }
                    else if (ver.theString == "version: 102")
                    {
                        AMZVersion = 2;
                    }
                    else if (ver.theString == "version: 101")
                    {
                        AMZVersion = 1;
                    }
                    uint32 align;
                }
                I16_StringEntry path;
                uint32 files;
                if (files)
                {
                    struct Files
                    {
                        for (i = 0; i < files; i++)
                        {
                            struct File
                            {
                                Printf("%s\\", path.theString);
                                if (AMZVersion >= 2)
                                {
                                    uint64 off;
                                }
                                else
                                {
                                    uint32 off;
                                }
                                uint32 sz;
                                if (AMZVersion == 3)
                                {
                                    uint64 splitSz;
                                    uint64 splitSzI64;
                                }
                                if (ReadUInt() > 0)
                                {
                                    ubyte dmy;
                                }
                                uint32 zero;
                                uint32 CRC32;
                                I16_StringEntry name;
                                Printf("%s\n", name.theString);
                                /*if (name.byteSize == 0)
                                {
                                    FSkip(-2);
                                }*/
                                uint32 cSize;
                                if (cSize == 0) //For v1
                                {
                                    uint32 combinedSize;
                                    uint32 zsz;
                                }
                                /*if (ReadUShort() > name.byteSize+4)
                                {
                                    ubyte dmy2;
                                }*/
                                I16_StringEntry name2;
                                if (name2.byteSize == 0)
                                {
                                    FSkip(-2);
                                }
                            } fileentry;
                        }
                    } fileentries;
                }
            } entry;
            FPos = FTell();
        }
    } entries;
} AMZ;