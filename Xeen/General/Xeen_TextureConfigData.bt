//--- 010 Editor v10.0.2 Binary Template
//
//      File: Xeen Texture Control/Condition Data (?) *.TCD
//      Authors: LolHacksRule
//      Version: 1
//      Purpose: Gets some data out of the binary.
//      Category: Deserializing 
//      File Mask: TCD
//      ID Bytes: TCD
//      History: 
//------------------------------------------------

#include "../../LHR/Common.bt"

//char    header[3]; //TCD
//char    unk[1]; //20
//int     unk2; //idk what value this is
//int     unk3; //idk what value this is
//int     unk4; //idk what value this is

/////WIP

typedef struct Header {
    uint    header<bgcolor=cGreen>; //TCD 
    uint    textureCount<bgcolor=cBlue>; //Must be 01+
    uint    texPacksCount<bgcolor=cPurple>; //Must be 01+
    uint    unk; //header size?
};

typedef struct MetaDataEntry
{
    uint32 packIdx;
    uint32 texNameStrOff; //Past tex pack string offs
    Vector4_F32 vec4;
};

/*struct TextureControlMetadataTable {
    struct Metadata {
        int packMetaDataSize<bgcolor=cPurple>; //idk what value this is
    } metaData[(uint)(header.packsCount)];
} textureControlMetadataTable;

//struct DummyData {
        //float    param[3]<bgcolor=cBlue>;
    //} dummyData;

struct FloatData {
        float    param[header.packsCount + header.textureCount]<bgcolor=cBlue>;
    } floatData[header.packsCount + header.textureCount]<optimize=false>;

struct TextureControlDataStringTable {
    struct TexturePackData {
        string packName<bgcolor=cPurple>; //idk what value this is
    } textureControlData[header.packsCount]<optimize=false>;
    struct TextureData {
        string textureName<bgcolor=cGreen>;
    } textureData[header.textureCount]<optimize=false>;
} textureControlDataStringTable;

//There's no endmark

//char    unknown[1]<bgcolor=cRed>; //should be 00
    //uint    paramCount<bgcolor=cLtBlue>; //Amount of parameters*/

struct TextureConfigData
{
    Header hdr;
    uint32 texStrOff[hdr.texPacksCount];
    MetaDataEntry metaData[hdr.textureCount];
} TCD;