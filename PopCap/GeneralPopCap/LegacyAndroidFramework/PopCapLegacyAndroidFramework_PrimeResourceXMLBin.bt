//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../../../LHR/Common.bt"

struct PopCapLegacyAndroidFramework_PrimeResourceXMLBin
{
    char magic[4]<bgcolor=cGreen>;
    int32 ver<bgcolor=cGreen>;
    int32 XMLEntries<bgcolor=cGreen>;
    if (XMLEntries)
    {
        struct XMLData
        {
            struct XMLMetaEntries
            {
                for (i = 0; i != XMLEntries; i++)
                {
                    struct XMLMetaEntry
                    {
                        int32 offInStrTbl;
                        int16 strSz;
                    } xme;
                }
            } xmes;
            struct XMLStringTable
            {
                for (i = 0; i != XMLEntries; i++)
                {
                    struct XMLStringEntry
                    {
                        char XMLString[xmes.xme[i].strSz];
                        /*if (xmes.xme[i].strSz != 0)
                        {
                            Printf("%s\n", XMLString);
                        }*/
                    } xse;
                }
            } xstr;
        } xdata<bgcolor=cGreen>;
        int32 unk<bgcolor=cRed>;
        if (unk)
        {
            struct UnknownData
            {
                for (i = 0; i != unk; i++)
                {
                    struct UnknownDataEntry
                    {
                        byte unk1;
                        int16 unk2;
                        int16 unk3;
                    } unkde;
                }
            } unkd<bgcolor=cRed>;
            struct UnknownData2
            {
                while (FPos < EOF) //Read until EOF
                {
                    struct UnknownData2Entry
                    {
                        int16 unk4;
                        int16 unk5;
                        FPos = FTell();
                    } unk2de;
                }
            } unkd2<bgcolor=cRed>;
        }
    }
    //uint16 unk[entries];
    //uint16 unk2[entries];
    //uint16 unk3[entries];
} resources_bxml;