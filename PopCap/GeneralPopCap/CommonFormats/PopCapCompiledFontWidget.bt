//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

//Also works with DAT files from legacy PVZ and iDevice ports

#include "../../../LHR/Common.bt"
local uint isUnicode = -1;

LittleEndian();

typedef enum <byte>
{
    False,
    True,
} bool;

typedef struct
{
    int32 stringSize<hidden=true>;
    if (stringSize >= 1)
    {
        char theString[stringSize];
    }
    else
    {
        Printf("String %i is empty!\n", i);
    }
} genericString;

typedef struct
{
    int16 DropShadowKernValue;
    uint16 unk;
} DropShadow;

typedef struct
{
    uint16 unk5;
    int32 LayerSetImageMap[4];
    int32 CharOffsetValue[2];
    int32 unk6;
    int32 WidthListValue;
    int32 unk7;
} LayerValue;

typedef struct
{
    genericString theLayerName;
} Layer;

struct CFW2
{
    byte MD5[16]; //MD5 of original TXT file, legacy games for iDevices exclude this and only have the later content
    if (ReadInt() == 3439307281) //Unicode font
    {
        isUnicode = 1;
        int32 unicodeMagic;
        int32 unicodeVer;
    }
    else
    {
        isUnicode = 0;
    }
    int32 LayerSetAscent;
    int32 LayerSetAscentPadding;
    int32 LayerSetHeight;
    int32 LayerSetSpacing;
    Byte_Bool Initialized;
    int32 LayerSetPointSize;
    int32 unk2;
    for (i = 0; i < unk2; i++)
    {
        if (isUnicode)
        {
            int16 unk10_unicodeval;
            int16 unk11_unicodeval;
        }
        uint16 unk10;
        uint16 unk11;
    }    
    int32 Layers;
    //uint16 unk3;
    for (i = 0; i < 3; i++)
    {
        struct LayerName
        {
            genericString theLayerName;
            int32 unk4;
        } lyrN;
    }
    int32 valueGroupCount;
    //for (i = 0; i < valueGroupCount; i++)
    //{
        //DropShadow theDropShadow;
        /*int32 CharListValue[4];
        int32 CharOffsetValue[2];
        int32 unk6;
        int32 WidthListValue;
        int32 unk7;*/
    //}
    //FSkip(-2);
    //int32 cntProb;
    //int32 unk12;
    //for (i = 0; i < valueGroupCount; i++)
    //{
        //LayerValue theLayerValue;
    //}
    int32 unk8[8];
    genericString LayerSetImage;
    FSkip(24);
} cfw2;
