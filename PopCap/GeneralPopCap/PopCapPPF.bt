//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//      File: PopCapPPF.bt
//      Authors: LolHacksRule
//      Version: 1
//      Purpose: Gets data out of PopCap's proprietary PPF (PopCap PopParticle File?) file format.
//      Category: Deserializing 
//      File Mask: PPF
//      ID Bytes: PPF
//      History: 
//------------------------------------------------

local int i <hidden=true> = 0;

typedef enum <byte> {
			True = 1,
			False = 0,
} TrueFalseFlag;

struct Header {
    byte ppfHdrSize;
    int32   ppfHeader<bgcolor=cGreen>; //Should be PPF
    int32   version<bgcolor=cBlue>;
    byte    mainParticleSize;
    char    mainParticleName[mainParticleSize];
    short   ptclFileStrings;
} header;

struct ParticleDataTable {
    for (i = 0; i < header.ptclFileStrings; i++)
    {
        struct ParticleStringTable {
            byte    particleSize;
            char    ptclName[particleSize];
            short u[2]; //?
            TrueFalseFlag u2; //May be byte?
            byte    refParticleSize;
            char    refPtclName[refParticleSize];
        } pDataStrTbl;
    }
    short unk;
    FSkip(4); //?
    struct ParticleLayerTable { //WIP
            byte    particleLYRSize;
            char    ptclLYRName[particleLYRSize];
            FSkip(92); //?
            byte    particleLYRTypeSize;
            char    ptclLYRTypeName[particleLYRTypeSize];
            //I give up for now
    } pLYRDataStrTbl;
} pDataTbl;

//char    header[4];
//char    version[1];
//char    padding[6];
//char    particleCnt[1];
//char    dummy[1];
//char    particleSize[1];
//string  ptclName;
//char    endOfPtclName[3];