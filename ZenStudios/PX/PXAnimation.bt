//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: PXTexture.bt
//   Authors: LolHacksRule
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "PXCommon.bt"

struct
{
    LittleEndian();
    PX_BinaryHeader PXBinaryHeader<bgcolor=cDkBlue>;
    uint32 unk; //7 in PVZ on MacOS CDN, 7 on iOS/Android CDN, 7 Amazon standalone
    time_t exportDate; //Export date i32, seems to be a day before the table date
    Vector2_F32 initPos; //Prob or is it vec2F32 some count i32
    uint32 entries;
    if (entries)
    {
        time_t timestamp[entries+2]; //Export date i32, seems to be a day before the table date
        U32_StringEntry exportString;
        U32_StringEntry name;
        PX_Platform platform; //3 on iOS, 5 on Android, platform ID?
        uint32 unk2[2]; //Seems to be 0
    }
    uint32 entries2;
    struct
    {
        UByte_StringEntry name;
        Vector2_F32 unk;
    } Entry[entries2]<optimize=false>;
    uint32 particleEmitterShapes;
    struct
    {
        BigEndian(); //Why
        PX_TypeInfo rootTypeInfo;
        LittleEndian();
        UByte_StringEntry name;
        uint32 unk;
        PX_TypeInfo dataTypeInfo;
        /*switch (dataTypeInfo) //why
        {
            case 12291: PX_AnimationChannel_FloatLinearFloat floatLinFloat; break; //it fits :shrug:
            case 12292: PX_AnimationChannel_FloatBezierFloat floatBezFloat; break; //it fits :shrug:
            case 12295: PX_AnimationChannel_FloatListFloat floatListFloat; break; //it fits :shrug:
            case 12385: PX_AnimationChannel_FloatListBool floatListBool; break;
            case 12419: PX_AnimationChannel_Float_LerpQuaternionFloatA animationChannelFloatLerpQuaternionFloatA; break;
            case 12833: PX_AnimationChannel_FloatMatrix3x4 mtx; break;
            case 12835: PX_AnimationChannel_FloatLerpTranslationFloatLerpQuaternionFloat unk2; break;
            case 12836: PX_AnimationChannel_FloatLerpTranslationFloatLerpQuaternionFloatLerpScale3Float unk2; break;
            case 12837: PX_AnimationChannel_FloatLerpTranslationFloatLerpQuaternionFloatA unk2; break;
            case 12839: PX_AnimationChannel_FloatConstTranslationFloatQuaternionFloatScale3Float unk2; break;
            default: Printf("Unsupported data type. %u\n", dataTypeInfo); break;
        }*/
    } ParticleEmitterShape[particleEmitterShapes]<optimize=false>;
} PXAnimation;