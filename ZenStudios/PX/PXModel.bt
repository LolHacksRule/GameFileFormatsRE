//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "PXCommon.bt"

typedef struct Transformable
{
    
};

struct
{
    LittleEndian();
    PX_BinaryHeader PXBinaryHeader<bgcolor=cDkBlue>;
    uint32 ver; //10 or 15 I've only seen so far
    if (ver > 10)
    {
        time_t timestamp[3]; //Same in PVZ ball.pxm, ball_melon.pxm and table.pxm
        uint32 unk; //2 in PFX3
        uint32 flag; //Seems to not be a bool but def an i32 at least in PFX3, 1/+ seems to include metadata (PVZ Amazon (+Final) CDN, PVZ/ZP Android/iOS CDN not PVZ MacOS CDN), 2 idk, 3 idk
        if (flag)
        {
            struct
            {
                PX_Platform exportPlatform;
                U32_StringEntry srcPath;
                U32_StringEntry name; //same as PXM
            } Metadata;
        }
        uint32 unk2[12];
        //? is 3 in PFX3, is this metadata
        //uint32 unk2[12];
        if (modelSubVersion > 1 && flag == 3) //Idk how this works
        {
            uint32 unk3;
            //byte unk[0x12];
        }
        PX_BoundingSphere bs;
        PX_AABB_Float aabb;
    }
    uint32 shaderMaterials;
    struct
    {
        PX_TypeInfo ti;
        U32_StringEntry name;
        byte unk[28];
        byte samplers;
        struct
        {
            UByte_StringEntry texSamp;
            uint32 unk;
        } Sampler[samplers]<optimize=false>;
        byte unk2[3];
        byte count;
        /*struct
        {
            UByte_StringEntry unk;
            uint32 unk2;
        } Unknown[count]<optimize=false>;
        UByte_StringEntry unk4;
        byte unk5[24];
        UByte_StringEntry shPass;
        byte unk6[12];
        UByte_StringEntry resPass;
        byte unk7[20];
        UByte_StringEntry texSamp2;*/
    } ShaderMaterial[shaderMaterials]<optimize=false>;
    uint32 unk4;
    PX_TypeInfo ti;
    //For an entry, after 6 bytes is a flag
} PXModel;