//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: PhiveBin.bt
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../../../LHR/Common.bt"

//Phive was introduced in Ring Fit Adventure

//https://epd.zeldamods.org/wiki/Common_Phive

typedef enum <ubyte> {
	PhiveDataType_Shape,
    PhiveDataType_NavMesh,
	PhiveDataType_StaticCompound,
	PhiveDataType_Cloth
} PhiveDataType;

struct
{
    struct
    {
        string PhiveMagic;
        uint16 verProb;
        //byte unk;
        LittleEndian();
        U16_EndianEnum endian; //Theorhetically this is Little
        PhiveDataType contentType;
        ubyte maxSectionCapacity;
        uint32 sectionOffArray[maxSectionCapacity];
        uint32 sectionSizeArray[maxSectionCapacity];
    } Header<bgcolor=cLtBlue>;
    FSeek(Header.sectionOffArray[0]);
    struct
    {
        while (i < Header.maxSectionCapacity)
        {
            if (Header.sectionOffArray[i] != 0 && Header.sectionSizeArray[i] != 0)
            {
                FSeek(Header.sectionOffArray[i]);
                struct
                {
                    byte data[Header.sectionSizeArray[i]]<bgcolor=cRed>;
                } Section;
            }
            i++;
        }
    } Sections;
    //We got rid of the other logic to make things more simple, maybe I'll add it back for more simple chunks
} PhiveBinary;