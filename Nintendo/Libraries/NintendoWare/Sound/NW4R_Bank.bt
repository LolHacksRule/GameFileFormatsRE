//------------------------------------------------
//--- 010 Editor v13.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

//https://github.com/AtlasOmegaAlpha/brbnkdec
//https://github.com/yell0wsuit/brbnkdec
//https://github.com/NintendoWare/nw-snd
//https://wiki.tockdom.com/wiki/BRBNK_(File_Format)

#include "../NW_CommonBin.bt"

typedef struct DataTable
{
    NW_SubChunk DataChunk;
    FPos = FTell();
    if (BlockHeader.ver == 1)
    {
        Printf("Version 1 bank DATA is currently UNSUPPORTED!\n");
        byte unknownData[DataChunk.blockSize-8];
    }
    else
    {
        uint32 bankDataEntries;
        NW_DataReference bankDataRef[bankDataEntries];
        struct
        {
            uint32 waveNum;
            struct
            {
                byte atk;
                byte decay;
                byte sustain;
                byte release;
                byte hold;
            } ADSREnvelope;
            ubyte waveDataLocType;
            ubyte noteOffType;
            ubyte altAssign;
            ubyte origKey;
            ubyte vol;
            ubyte pan;
            ubyte surroundPan;
            float pitch;
            byte pad[28]; //28
        } BankDataEntry[bankDataEntries]<optimize=false>;
    }
    //byte endPad[18];
};

typedef struct WaveTable
{
    NW_SubChunk WaveChunk;
    //if (BlockHeader.ver == 1)
    {
        //Printf("Version 1 bank WAVE is currently UNSUPPORTED!\n");
        Printf("WAVE Chunk is currently UNSUPPORTED!\n");
        byte unknownData[WaveChunk.blockSize-8];
    }
    /*else
    {
        uint32 entries;
        struct Entry
        {
            byte unk[112];
        } entry[entries];
    }*/
};

struct 
{
    BigEndian();
    if (ReadUInt() != 1380077131)
    {
        Printf("This is not a NW4R Bank file (BRBNK).\n");
        break;
    }
    NW_CommonBinHeader BlockHeader;
    //We'd go to the subchunk offs if v7+ but that's unnecessary
    DataTable DATA;
    if (BlockHeader.ver > 1)
        FSeek(BlockHeader.block[1].off);
    WaveTable WAVE;
} NW4R_Bank_BRBNK;