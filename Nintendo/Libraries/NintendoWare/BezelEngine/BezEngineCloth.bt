//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: BZEngCloth.bt
//   Authors: LHR
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

LittleEndian();

#include "../NW_CommonBin.bt"

struct Cloth
{
    N_NX_CommonBinHdr theClothHdr<bgcolor = cBlue>;
    struct Content
    {
        int64 RootBoneNameOffset<comment="Root Bone Name Offset">;
        int64 clothPtclTblOffst<comment="Cloth Particle Table Offset">;
        int64 clothStructureOffst<comment="Cloth Structure Table Offset">;
        float vStiff<comment="Vertical Stiffness">;
        float hStiff<comment="Horizontal Stiffness">;
        float sStiff<comment="Shearing Stiffness">;
        float bStiff<comment="Bending Stiffness">;
        byte clothPtclCnt<comment="Cloth Particle Count">;
        byte quadVtxCnt<comment="Quad Vertex Count">; //?
        byte clothShape;
        Byte_Bool disableCollDetection<comment="Disable Collision Detection, 1 = ON, 2 = OFF">;;
        float selfCollDist<comment="Self Collision Distance">;
        float selfCollStiff<comment="Self Collision Stiffness">;
        if (theClothHdr.version.major > 2)
        {
            float simFreq<comment="Simulation Frequency">;
            float stiffFreq<comment="Stiffness Frequency">;
            float windDrag<comment="Wind Drag">;
            float windLift<comment="Wind Lift">;;
            byte  vpSetting<comment="Virtual Particle Setting">;
        }
        FSeek(clothPtclTblOffst);
        //if 0, let's safely assume there's no cloth structure
        if (clothStructureOffst > 0)
        {
            struct ClothParticles
            {
                if (theClothHdr.version.major > 2)
                {
                    float invMass[2]<comment="Inverted Mass (x2)">;
                }
                else
                {
                    float invMass;
                }
                int32 boneId<comment="Bone ID">;
                //int64 dmy;
            } clothPtcls[clothPtclCnt]<comment="Cloth Particles", optimize=false>;
            if (theClothHdr.version.major > 2)
            {
                byte clothStructure[48]<comment="Cloth Structure (in bytes)">;
            }
            else
            {
                byte clothStructure[16]<comment="Cloth Structure (in bytes)">;
            }
        }
        FSeek(RootBoneNameOffset); //Go to root bone name
        int16 strSize<hidden=true>;
        string RootBoneName<comment="Root Bone Name">;
        FSeek(theClothHdr.offsetToFileName);
        //int16 fNameStrSize;
        string fnameStr<comment="Should be NoName">;
        FSeek(theClothHdr.offsetToRelTable);
        N_NX_RelocationTable theClothRLT;
    } content<comment="Bezel Cloth Config Bin Content">;
} cloth<comment="Binary NintendoWare Bezel Engine Cloth Config">;