//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

//CONSTANT ENUMS

typedef enum <int16>
{
    BBT_None,
    BBT_AllAxis,
    BBT_AxisXZ
} NB_BillboardType;

typedef enum <byte>
{
    Disabled = 0x00,
    Submersible = 0x01,
    Submerged = 0x02,
} NB_UnderWaterRenderingMode;

typedef enum <byte>
{
    BTC_Auto = 0x0,
    BTC_Always = 0x1,
    BTC_Never = 0x2,
} NB_BakeTargetCondition;

typedef enum <int16>
{
    ASOT_MilliSeconds,
    ASOT_Tick,
    ASOT_Sample
} NB_AudioStartOffsetType;

typedef enum <byte>
{
    LT_Directional,
    LT_Point,
    LT_Spot
} NB_LightType;

typedef enum <byte>
{
    CCPT_PerspectiveFovy,
    CCPT_PerspectiveFrustum,
    CCPT_PerspectiveLighty,
    CCPT_Orthographic,
    CCPT_Custom
} NB_ComCameraProjectionType;

typedef enum <int32>
{
    CLSNShapeType_Box = 0,
    CLSNShapeType_Sphere = 1,
    CLSNShapeType_Capsule = 2,
} NB_CollisionShapeType;

typedef enum <int64>
{
    CLSN2dShapeType_Box2d,
    CLSN2dShapeType_Circle2d,
    CLSN2dShapeType_CornerClippedBox2d,
    CLSN2dShapeType_OpenBoxEdge2d
} NB_CollisionShapeType2d;

typedef enum <byte>
{
    LgtUnit_Luminance,    
    LgtUnit_LuminousPower,
    LgtUnit_Illuminance,  
    LgtUnit_Unknown,      
} NB_LightUnit;

typedef enum <int64>
{
    ScriptParamType_Int,
    ScriptParamType_Float,
    ScriptParamType_Bool,
    ScriptParamType_String,
    //ScriptParamType_Vector3,
    ScriptParamType_Entity,
    ScriptParamType_ScriptRef,
} NB_ScriptParamType;

typedef enum <int32>
{
    HitCLSNType_Attack,
    HitCLSNType_Damage,
} NB_HitCollisionType;

typedef enum <byte>
{
    SPRTBlendMode_None,
    SPRTBlendMode_AlphaBlend,
    SPRTBlendMode_Additive,
    SPRTBlendMode_Subtractive
} NB_SpriteBlendMode;

typedef enum <uint32>
{
    ComPropertyValueType_Int,
    ComPropertyValueType_Float,
    ComPropertyValueType_Bool,
    ComPropertyValueType_String,
    ComPropertyValueType_Vector3,
    ComPropertyValueType_Matrix43
} NB_ComPropertyValueType;

typedef enum <byte>
{
    CL_All,
    CL_None,
    CL_Default,
    CL_Character,
    CL_Static,
    CL_Debris,
    CL_HitCollisionAttack,
    CL_HitCollisionDamage,
    CL_PhysicalAnimation,
    CL_User1,
    CL_User2,
    CL_User3,
    CL_User4,
    CL_User5,
    CL_User6,
    CL_User7,
    CL_User8,
    //CL_Unknown = 112, //Used when nothing's defined
} NB_CollisionLayer;

typedef enum <uint32>
{
    CLU32_All,
    CLU32_None,
    CLU32_Default,
    CLU32_Character,
    CLU32_Static,
    CLU32_Debris,
    //Fsr User1 goes up from Debris by 5
    CLU32_User1 = 9,
    CLU32_User2,
    CLU32_User3,
    CLU32_User4,
    CLU32_User5,
    CLU32_User6,
    CLU32_User7,
    CLU32_User8,
    //CL_Unknown = 112, //Used when nothing's defined
} NB_CollisionLayerU32;

typedef enum <int32>
{
    CL2d_All,
    CL2d_None,
    CL2d_Default,
    CL2d_Static,
    CL2d_Debris,
    CL2d_User1,
    CL2d_User2,
    CL2d_User3,
    CL2d_User4,
    CL2d_User5,
    CL2d_User6,
    CL2d_User7,
    CL2d_User8,
} NB_CollisionLayer2d;

typedef enum <byte>
{
    CQ_Invalid,
    CQ_Debris,
    CQ_RobustDebris,
    CQ_Moving,
    CQ_Critical,
    CQ_Bullet,
} NB_CollisionQuality;

typedef enum <byte>
{
    CQ2d_Invalid,
    CQ2d_Moving,
    CQ2d_Bullet,
} NB_CollisionQuality2d;

typedef enum <byte>
{
    BoundingVol_Sphere,
    BoundingVol_Aaab,
    BoundingVol_Obb,
} NB_BoundingVolumeType;

typedef struct NB_KeyValuePair
{
    int64 keyOff;
    int64 ValueOff;
    NB_ComPropertyValueType ComPropertyValueType;
};

typedef struct NB_BoundingSphere
{
    float radius;
};

typedef struct NB_Aaab
{
    float min[3];
    float max[3];
};

typedef struct NB_Obb
{
    float rotate[3];
    float min[3];
    float max[3];
};


typedef struct NB_BoundingVolume
{
    byte targetID[16];
    byte pad[3];
    uint64 spheres;
    NB_BoundingSphere BoundingSphere[spheres]; 
    uint64 aaabs;
    NB_Aaab Aabs[aaabs]; 
    uint64 obbs;
    NB_Obb Obbs[obbs]; 
};

typedef struct NB_ReflectionProbe
{
    byte targetID[16];
    float Position[3];
    NB_BoundingVolume BoundingVolume;
    uint64 texturePath;
};

typedef struct NB_Light
{
    byte targetEntityID[16];
    Byte_Bool isEnabled;
};

typedef struct NB_LightMapPerShape
{
    uint64 texturePath;
};

typedef struct NB_LightMap
{
    byte targetEntityID[16];
    uint16 lightMapPerShapesCount;
    byte pad[2];
    
};

typedef struct NB_LightProbeBakePoint
{
    byte targetID[16];
    float Position[3];
    NB_BoundingVolume BoundingVolume;
    float shCoeff;
};

typedef struct NB_LightProbeGrid
{
    byte targetID[16];
    float Position[3];
    NB_BoundingVolume BoundingVolume;
    byte dividedCount[3];
    Byte_Bool isUseGlobalLighting;
    float illuminanceScale;
    float probeBlendRatio;
    float globalBlendRatio;
    uint64 texPaths[4];
};