//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: PhiveBin.bt
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

#include "../../LHR/Common.bt"

//Phive was introduced in Ring Fit Adventure

typedef enum <uint16> {
	Cloth = 771,
    Shape = 1024,
    NavMesh = 769,
} dataType;

struct PhiveBinary
{
    struct Header
    {
        string PhiveMagic;
        uint16 verProb;
        //byte unk;
        LittleEndian();
        U16_EndianEnum endian; //Theorhetically this is Little
        dataType contentType;
        uint32 tagSize_BEOff; //48
        if (contentType == Cloth)
        {
            uint32 PMAADataOff<bgcolor=cGreen>;
            uint32 tagSize<bgcolor=cGreen>;
            uint32 PMAADataOffFrom0x30;
            uint32 PMAADataSize;
        }
        else
        {
            uint32 unkOff<bgcolor=cRed>; //near EOF, off of the unknown data
            uint32 unkOff2<bgcolor=cRed>; //near EOF, except in NavMeshes where this goes 4+ beyond EOF
            uint32 tagSize;
            uint32 tagOff;
        }
        if (contentType == Shape)
        {
            uint32 offToCustomData[2]<bgcolor=cRed>;
            uint64 dmy; //0
        }
        else
        {
            uint64 dmy[2]<bgcolor=cRed>; //0 confirmed
        }
        BigEndian(); //Temporarily use BE to read this
        uint32 tagSize_BE;
        LittleEndian(); //swap back
    } hdr<bgcolor=cLtBlue>;
    byte HavokTag[hdr.tagSize_BE]<bgcolor=cPurple>;
    if (hdr.contentType == Shape)
    {
        byte unknownData[hdr.offToCustomData[0]]<bgcolor=cRed>; //Idk
        byte unknownData2[hdr.offToCustomData[1]]<bgcolor=cRed>; //I also don't know
    }
    else if (hdr.contentType == NavMesh)
    {
        byte unknownData[48]<bgcolor=cRed>; //Idk, has floats, has either 52 bytes or 48 bytes
    }
    else
    {
        //FSkip(4);
        byte PMAAData[hdr.PMAADataSize]<bgcolor=cGreen>;
    }
} PhiveBin;