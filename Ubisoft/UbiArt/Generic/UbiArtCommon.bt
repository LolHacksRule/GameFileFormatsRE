//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: UbiArtCommon.bt
//   Authors: LolHacksRule
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef enum <long>
{
    UAF_English,
    UAF_French,
    UAF_Japanese,
    UAF_German,
    UAF_Spanish,
    UAF_Italian,
    UAF_Portuguese_Legacy = 8,
    UAF_Polish = 10,
    UAF_Russian,
    UAF_Dutch,
    UAF_Czech_OR_Danish,
    UAF_Hungarian_OR_Norweigan,
    UAF_Swedish,
    UAF_Finnish,
    UAF_Portuguese,
} UAF_Lang;

typedef struct UAF_WString
{
    int32 strID;
    int32 stringSize;
    if (stringSize != 0)
    {
        wchar_t tstring[stringSize];
        //Printf("%s(%i)\n", tstring, strID);
    }
};

typedef struct UAF_String
{
    int32 strID;
    int32 stringSize;
    if (stringSize != 0)
    {
        char tstring[stringSize];
        //Printf("%s(%i)\n", tstring, strID);
    }
};

typedef struct UAF_SoundRef
{
    int32 soundStrID;
    int32 unk1;
    int32 stringSize;
    if (stringSize != 0)
    {
        wchar_t tstring[stringSize];
        //int32 unk;
        //int32 strID;
    }
    else
    {
        //int32 unk;
        //int32 strID;
    }
    //if (strID == 1)
    {
        //FSkip(-4);
    }
    uint32 unk2;
};

typedef struct UAF_SoundPath
{
    int32 stringSize;
    if (stringSize != 0)
    {
        wchar_t tstring[stringSize];
    }
};