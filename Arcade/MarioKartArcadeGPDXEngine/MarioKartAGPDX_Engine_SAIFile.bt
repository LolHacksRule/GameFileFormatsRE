//--- 010 Editor v10.0.2 Binary Template
//
//      File: Mario Kart Arcade Grand Prix DX (Engine) *.SAII
//      Authors: LolHacksRule
//      Version: 1
//      Purpose: Gets some data out of the binary.
//      Category: Deserializing 
//      File Mask: SAI
//      ID Bytes: SAI
//      History: 
//------------------------------------------------

typedef enum <uint32>
{
    MK3 = 1229537619, //SAII
    VACUUM = 843661651, //SAI2
} GameType;

typedef struct Header
{
    GameType magic;
    if (hdr.magic == VACUUM)
    {
        uint32 unk2;
    }
    uint32 renderWidth;
    uint32 renderHeight;
};

typedef struct Meta
{
    uint32 entries;
    uint32 totalEntries;
    uint32 entrySz;
    uint32 paramEntries;
    uint32 paramEntrySz;
    uint64 unk;
    uint32 unk2[5];
    //if (hdr.magic == VACUUM)
};

typedef struct Entry
{
    char entryStr[meta.entrySz];
};

typedef struct ParamEntry
{
    char paramEntryStr[meta.paramEntrySz];
};

typedef struct Param
{
    /*uint32 unk[3];
    uint32 width;
    uint32 height;
    uint32 unk2[2];
    int32 unk3[6];
    int16 unk4;*/
    //byte unk[68];
};

struct ScriptedAIInfo
{
    Header hdr;
    Meta meta;
    //FSeek(0x40);
    Entry entry[meta.entries]<optimize=false>;
    uint32 entryNameCRC32[meta.entries];
    ParamEntry paramEntry[meta.paramEntries]<optimize=false>;
    uint32 paramEntryNameCRC32[meta.paramEntries];
    //Param prm[meta.totalEntries];
    //char    param1[32]; //idk what value this is
    //There's no endmark
} SAII;